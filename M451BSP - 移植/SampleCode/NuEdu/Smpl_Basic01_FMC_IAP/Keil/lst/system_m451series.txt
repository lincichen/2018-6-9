; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\system_m451series.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\system_m451series.d --cpu=Cortex-M4.fp --apcs=interwork -L6969W -I..\..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\NuEdu\inc -I.\zmodem -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -DDEBUG_ENABLE_SEMIHOST --omf_browse=.\obj\system_m451series.crf ..\..\..\..\Library\Device\Nuvoton\M451Series\Source\system_M451Series.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;30      *----------------------------------------------------------------------------*/
;;;31     void SystemCoreClockUpdate(void)             /* Get Core Clock Frequency      */
000000  b518              PUSH     {r3,r4,lr}
000002  a01f              ADR      r0,|L1.128|
000004  f04f4480          MOV      r4,#0x40000000
000008  6800              LDR      r0,[r0,#0]
00000a  9000              STR      r0,[sp,#0]
00000c  f8d40240          LDR      r0,[r4,#0x240]
000010  f4102fa0          TST      r0,#0x50000
;;;32     {
000014  d001              BEQ      |L1.26|
000016  2100              MOVS     r1,#0
000018  e017              B        |L1.74|
                  |L1.26|
00001a  0301              LSLS     r1,r0,#12
00001c  d501              BPL      |L1.34|
00001e  4919              LDR      r1,|L1.132|
000020  e000              B        |L1.36|
                  |L1.34|
000022  4919              LDR      r1,|L1.136|
                  |L1.36|
000024  0382              LSLS     r2,r0,#14
000026  d410              BMI      |L1.74|
000028  f3c00208          UBFX     r2,r0,#0,#9
00002c  f3c03381          UBFX     r3,r0,#14,#2
000030  0889              LSRS     r1,r1,#2
000032  1c92              ADDS     r2,r2,#2
000034  f81d3003          LDRB     r3,[sp,r3]
000038  f3c02044          UBFX     r0,r0,#9,#5
00003c  4351              MULS     r1,r2,r1
00003e  1c80              ADDS     r0,r0,#2
000040  fb10f003          SMULBB   r0,r0,r3
000044  fbb1f0f0          UDIV     r0,r1,r0
000048  0081              LSLS     r1,r0,#2
                  |L1.74|
;;;33     #if 1
;;;34         uint32_t u32Freq, u32ClkSrc;
;;;35         uint32_t u32HclkDiv;
;;;36     
;;;37         /* Update PLL Clock */
;;;38         PllClock = CLK_GetPLLClockFreq();
00004a  4a10              LDR      r2,|L1.140|
;;;39     
;;;40         u32ClkSrc = CLK->CLKSEL0 & CLK_CLKSEL0_HCLKSEL_Msk;
00004c  6091              STR      r1,[r2,#8]  ; PllClock
00004e  f8d40210          LDR      r0,[r4,#0x210]
000052  f0000007          AND      r0,r0,#7
;;;41     
;;;42         if(u32ClkSrc == CLK_CLKSEL0_HCLKSEL_PLL)
000056  2802              CMP      r0,#2
000058  d003              BEQ      |L1.98|
;;;43         {
;;;44             /* Use PLL clock */
;;;45             u32Freq = PllClock;
;;;46         }
;;;47         else
;;;48         {
;;;49             /* Use the clock sources directly */
;;;50             u32Freq = gau32ClkSrcTbl[u32ClkSrc];
00005a  f102010c          ADD      r1,r2,#0xc
00005e  f8511020          LDR      r1,[r1,r0,LSL #2]
                  |L1.98|
;;;51         }
;;;52     
;;;53         u32HclkDiv = (CLK->CLKDIV0 & CLK_CLKDIV0_HCLKDIV_Msk) + 1;
000062  f8d40220          LDR      r0,[r4,#0x220]
000066  f000000f          AND      r0,r0,#0xf
00006a  1c40              ADDS     r0,r0,#1
;;;54     
;;;55         /* Update System Core Clock */
;;;56         SystemCoreClock = u32Freq / u32HclkDiv;
00006c  fbb1f0f0          UDIV     r0,r1,r0
;;;57     
;;;58     
;;;59         //if(SystemCoreClock == 0)
;;;60         //    __BKPT(0);
;;;61     
;;;62         CyclesPerUs = (SystemCoreClock + 500000) / 1000000;
000070  4907              LDR      r1,|L1.144|
000072  6010              STR      r0,[r2,#0]  ; SystemCoreClock
000074  4408              ADD      r0,r0,r1
000076  0049              LSLS     r1,r1,#1
000078  fbb0f0f1          UDIV     r0,r0,r1
00007c  6050              STR      r0,[r2,#4]  ; CyclesPerUs
;;;63     #endif
;;;64     }
00007e  bd18              POP      {r3,r4,pc}
;;;65     
                          ENDP

                  |L1.128|
000080  01020204          DCB      1,2,2,4
                  |L1.132|
                          DCD      0x01518000
                  |L1.136|
                          DCD      0x00b71b00
                  |L1.140|
                          DCD      ||.data||
                  |L1.144|
                          DCD      0x0007a120

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;74      */
;;;75     void SystemInit(void)
000000  b510              PUSH     {r4,lr}
000002  2159              MOVS     r1,#0x59
000004  2216              MOVS     r2,#0x16
000006  2388              MOVS     r3,#0x88
000008  0788              LSLS     r0,r1,#30
                  |L2.10|
00000a  f8c01100          STR      r1,[r0,#0x100]
00000e  f8c02100          STR      r2,[r0,#0x100]
000012  f8c03100          STR      r3,[r0,#0x100]
000016  f8d04100          LDR      r4,[r0,#0x100]
00001a  2c00              CMP      r4,#0
00001c  d0f5              BEQ      |L2.10|
;;;76     {
;;;77         /* ToDo: add code to initialize the system
;;;78                  do not use global variables because this function is called before
;;;79                  reaching pre-main. RW section maybe overwritten afterwards.          */
;;;80         
;;;81         SYS_UnlockReg();
;;;82         /* One-time POR18 */
;;;83         if((SYS->PDID >> 12) == 0x945)
00001e  6801              LDR      r1,[r0,#0]
000020  f6401245          MOV      r2,#0x945
000024  ebb23f11          CMP      r2,r1,LSR #12
000028  d103              BNE      |L2.50|
;;;84         {
;;;85             M32(GCR_BASE+0x14) |= BIT7;
00002a  6941              LDR      r1,[r0,#0x14]
00002c  f0410180          ORR      r1,r1,#0x80
000030  6141              STR      r1,[r0,#0x14]
                  |L2.50|
;;;86         }
;;;87         /* Force to use INV type with HXT */
;;;88         CLK->PWRCTL &= ~CLK_PWRCTL_HXTSELTYP_Msk;
000032  f8d01200          LDR      r1,[r0,#0x200]
000036  f4215180          BIC      r1,r1,#0x1000
00003a  f8c01200          STR      r1,[r0,#0x200]
00003e  2100              MOVS     r1,#0
000040  f8c01100          STR      r1,[r0,#0x100]
;;;89         SYS_LockReg();
;;;90     
;;;91     
;;;92     #ifdef EBI_INIT
;;;93         extern void SYS_Init();
;;;94         extern void EBI_Init();
;;;95         
;;;96         SYS_UnlockReg();
;;;97         SYS_Init();
;;;98         EBI_Init();
;;;99         SYS_LockReg();
;;;100    #endif
;;;101    
;;;102        /* FPU settings ------------------------------------------------------------*/
;;;103    #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;104        SCB->CPACR |= ((3UL << 10 * 2) |               /* set CP10 Full Access */
000044  4802              LDR      r0,|L2.80|
000046  6801              LDR      r1,[r0,#0]
000048  f4410170          ORR      r1,r1,#0xf00000
00004c  6001              STR      r1,[r0,#0]
;;;105                       (3UL << 11 * 2));               /* set CP11 Full Access */
;;;106    #endif
;;;107    
;;;108    }
00004e  bd10              POP      {r4,pc}
;;;109    /*** (C) COPYRIGHT 2013~2015 Nuvoton Technology Corp. ***/
                          ENDP

                  |L2.80|
                          DCD      0xe000ed88

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00b71b00
                  CyclesPerUs
                          DCD      0x0000000c
                  PllClock
                          DCD      0x00b71b00
                  gau32ClkSrcTbl
                          DCD      0x00b71b00
                          DCD      0x00008000
                          DCD      0x00000000
                          DCD      0x00002710
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x01518000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\Device\\Nuvoton\\M451Series\\Source\\system_M451Series.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_system_M451Series_c_5d646a67____REV16|
#line 114 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___19_system_M451Series_c_5d646a67____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_system_M451Series_c_5d646a67____REVSH|
#line 128
|__asm___19_system_M451Series_c_5d646a67____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
