; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\sys.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\sys.d --cpu=Cortex-M4.fp --apcs=interwork -L6969W -I..\..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\NuEdu\inc -I.\zmodem -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -DDEBUG_ENABLE_SEMIHOST --omf_browse=.\obj\sys.crf ..\..\..\..\Library\StdDriver\src\sys.c]
                          THUMB

                          AREA ||i.SYS_ClearResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_ClearResetSrc PROC
;;;44       */
;;;45     void SYS_ClearResetSrc(uint32_t u32Src)
000000  f04f4180          MOV      r1,#0x40000000
;;;46     {
;;;47         SYS->RSTSTS |= u32Src;
000004  684a              LDR      r2,[r1,#4]
000006  4302              ORRS     r2,r2,r0
000008  604a              STR      r2,[r1,#4]
;;;48     }
00000a  4770              BX       lr
;;;49     
                          ENDP


                          AREA ||i.SYS_DisableBOD||, CODE, READONLY, ALIGN=1

                  SYS_DisableBOD PROC
;;;195      */
;;;196    void SYS_DisableBOD(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;197    {
;;;198        SYS->BODCTL &= ~SYS_BODCTL_BODEN_Msk;
000004  6981              LDR      r1,[r0,#0x18]
000006  f0210101          BIC      r1,r1,#1
00000a  6181              STR      r1,[r0,#0x18]
;;;199    }
00000c  4770              BX       lr
;;;200    
                          ENDP


                          AREA ||i.SYS_EnableBOD||, CODE, READONLY, ALIGN=1

                  SYS_EnableBOD PROC
;;;176      */
;;;177    void SYS_EnableBOD(int32_t i32Mode, uint32_t u32BODLevel)
000000  f04f4280          MOV      r2,#0x40000000
;;;178    {
;;;179        /* Enable Brown-out Detector function */
;;;180        SYS->BODCTL |= SYS_BODCTL_BODEN_Msk;
000004  6993              LDR      r3,[r2,#0x18]
000006  f0430301          ORR      r3,r3,#1
00000a  6193              STR      r3,[r2,#0x18]
;;;181    
;;;182        /* Enable Brown-out interrupt or reset function */
;;;183        SYS->BODCTL = (SYS->BODCTL & ~SYS_BODCTL_BODRSTEN_Msk) | i32Mode;
00000c  6993              LDR      r3,[r2,#0x18]
00000e  f0230308          BIC      r3,r3,#8
000012  4303              ORRS     r3,r3,r0
000014  6193              STR      r3,[r2,#0x18]
;;;184    
;;;185        /* Select Brown-out Detector threshold voltage */
;;;186        SYS->BODCTL = (SYS->BODCTL & ~SYS_BODCTL_BODVL_Msk) | u32BODLevel;
000016  6990              LDR      r0,[r2,#0x18]
000018  f0200006          BIC      r0,r0,#6
00001c  4308              ORRS     r0,r0,r1
00001e  6190              STR      r0,[r2,#0x18]
;;;187    }
000020  4770              BX       lr
;;;188    
                          ENDP


                          AREA ||i.SYS_GetBODStatus||, CODE, READONLY, ALIGN=1

                  SYS_GetBODStatus PROC
;;;56       */
;;;57     uint32_t SYS_GetBODStatus(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;58     {
;;;59         return ((SYS->BODCTL & SYS_BODCTL_BODOUT_Msk) >> SYS_BODCTL_BODOUT_Pos);
000004  6980              LDR      r0,[r0,#0x18]
000006  f3c01080          UBFX     r0,r0,#6,#1
;;;60     }
00000a  4770              BX       lr
;;;61     
                          ENDP


                          AREA ||i.SYS_GetResetSrc||, CODE, READONLY, ALIGN=1

                  SYS_GetResetSrc PROC
;;;67       */
;;;68     uint32_t SYS_GetResetSrc(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;69     {
;;;70         return (SYS->RSTSTS);
000004  6840              LDR      r0,[r0,#4]
;;;71     }
000006  4770              BX       lr
;;;72     
                          ENDP


                          AREA ||i.SYS_IsRegLocked||, CODE, READONLY, ALIGN=1

                  SYS_IsRegLocked PROC
;;;79       */
;;;80     uint32_t SYS_IsRegLocked(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;81     {
;;;82         return !(SYS->REGLCTL & 0x1);
000004  f8d00100          LDR      r0,[r0,#0x100]
000008  f3400000          SBFX     r0,r0,#0,#1
00000c  1c40              ADDS     r0,r0,#1
;;;83     }
00000e  4770              BX       lr
;;;84     
                          ENDP


                          AREA ||i.SYS_ReadPDID||, CODE, READONLY, ALIGN=1

                  SYS_ReadPDID PROC
;;;90       */
;;;91     uint32_t  SYS_ReadPDID(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;92     {
;;;93         return SYS->PDID;
000004  6800              LDR      r0,[r0,#0]
;;;94     }
000006  4770              BX       lr
;;;95     
                          ENDP


                          AREA ||i.SYS_ResetCPU||, CODE, READONLY, ALIGN=1

                  SYS_ResetCPU PROC
;;;114      */
;;;115    void SYS_ResetCPU(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;116    {
;;;117        SYS->IPRST0 |= SYS_IPRST0_CPURST_Msk;
000004  6881              LDR      r1,[r0,#8]
000006  f0410102          ORR      r1,r1,#2
00000a  6081              STR      r1,[r0,#8]
;;;118    }
00000c  4770              BX       lr
;;;119    
                          ENDP


                          AREA ||i.SYS_ResetChip||, CODE, READONLY, ALIGN=1

                  SYS_ResetChip PROC
;;;102      */
;;;103    void SYS_ResetChip(void)
000000  f04f4080          MOV      r0,#0x40000000
;;;104    {
;;;105        SYS->IPRST0 |= SYS_IPRST0_CHIPRST_Msk;
000004  6881              LDR      r1,[r0,#8]
000006  f0410101          ORR      r1,r1,#1
00000a  6081              STR      r1,[r0,#8]
;;;106    }
00000c  4770              BX       lr
;;;107    
                          ENDP


                          AREA ||i.SYS_ResetModule||, CODE, READONLY, ALIGN=1

                  SYS_ResetModule PROC
;;;153      */
;;;154    void SYS_ResetModule(uint32_t u32ModuleIndex)
000000  0e01              LSRS     r1,r0,#24
;;;155    {
;;;156        /* Generate reset signal to the corresponding module */
;;;157        *(volatile uint32_t *)((uint32_t)&SYS->IPRST0 + (u32ModuleIndex >> 24))  |= 1 << (u32ModuleIndex & 0x00ffffff);
000002  f1014180          ADD      r1,r1,#0x40000000
000006  688b              LDR      r3,[r1,#8]
000008  2201              MOVS     r2,#1
00000a  4082              LSLS     r2,r2,r0
00000c  4313              ORRS     r3,r3,r2
00000e  608b              STR      r3,[r1,#8]
;;;158    
;;;159        /* Release corresponding module from reset state */
;;;160        *(volatile uint32_t *)((uint32_t)&SYS->IPRST0 + (u32ModuleIndex >> 24))  &= ~(1 << (u32ModuleIndex & 0x00ffffff));
000010  6888              LDR      r0,[r1,#8]
000012  4390              BICS     r0,r0,r2
000014  6088              STR      r0,[r1,#8]
;;;161    }
000016  4770              BX       lr
;;;162    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\StdDriver\\src\\sys.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REV16|
#line 114 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_sys_c_962b9fbe____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_sys_c_962b9fbe____REVSH|
#line 128
|__asm___5_sys_c_962b9fbe____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
