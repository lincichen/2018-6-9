; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\nuedu-basic01_led.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\nuedu-basic01_led.d --cpu=Cortex-M4.fp --apcs=interwork -L6969W -I..\..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\NuEdu\inc -I.\zmodem -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.0\CMSIS\Include -DDEBUG_ENABLE_SEMIHOST --omf_browse=.\obj\nuedu-basic01_led.crf ..\..\..\..\Library\NuEdu\src\NuEdu-Basic01_LED.c]
                          THUMB

                          AREA ||i.Initial_LED||, CODE, READONLY, ALIGN=2

                  Initial_LED PROC
;;;30     
;;;31     void Initial_LED(void)
000000  b570              PUSH     {r4-r6,lr}
;;;32     {
;;;33         GPIO_SetMode(PB, BIT2, GPIO_MODE_OUTPUT); //LED1
000002  4c14              LDR      r4,|L1.84|
000004  2201              MOVS     r2,#1
000006  2104              MOVS     r1,#4
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GPIO_SetMode
;;;34         GPIO_SetMode(PB, BIT3, GPIO_MODE_OUTPUT); //LED2
00000e  2201              MOVS     r2,#1
000010  2108              MOVS     r1,#8
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GPIO_SetMode
;;;35         GPIO_SetMode(PC, BIT3, GPIO_MODE_OUTPUT); //LED3
000018  4d0e              LDR      r5,|L1.84|
00001a  2201              MOVS     r2,#1
00001c  3540              ADDS     r5,r5,#0x40
00001e  2108              MOVS     r1,#8
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       GPIO_SetMode
;;;36         GPIO_SetMode(PC, BIT2, GPIO_MODE_OUTPUT); //LED4
000026  2201              MOVS     r2,#1
000028  2104              MOVS     r1,#4
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       GPIO_SetMode
;;;37         GPIO_SetMode(PA, BIT9, GPIO_MODE_OUTPUT); //LED5
000030  2201              MOVS     r2,#1
000032  0251              LSLS     r1,r2,#9
000034  f04f2040          MOV      r0,#0x40004000
000038  f7fffffe          BL       GPIO_SetMode
;;;38         GPIO_SetMode(PB, BIT1, GPIO_MODE_OUTPUT); //LED6
00003c  2201              MOVS     r2,#1
00003e  2102              MOVS     r1,#2
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       GPIO_SetMode
;;;39         GPIO_SetMode(PC, BIT7, GPIO_MODE_OUTPUT); //LED7
000046  4628              MOV      r0,r5
000048  e8bd4070          POP      {r4-r6,lr}
00004c  2201              MOVS     r2,#1
00004e  2180              MOVS     r1,#0x80
000050  f7ffbffe          B.W      GPIO_SetMode
;;;40     
;;;41     }
;;;42     
                          ENDP

                  |L1.84|
                          DCD      0x40004040

                          AREA ||i.LED_On||, CODE, READONLY, ALIGN=2

                  LED_On PROC
;;;42     
;;;43     void LED_On(unsigned int temp)
000000  b510              PUSH     {r4,lr}
;;;44     {
;;;45         if((temp & 1) != 1)
;;;46             _LED1 = 1;
000002  4b1a              LDR      r3,|L2.108|
000004  07c4              LSLS     r4,r0,#31             ;45
000006  f04f0101          MOV      r1,#1
00000a  f04f0200          MOV      r2,#0
00000e  d01f              BEQ      |L2.80|
;;;47         else
;;;48             _LED1 = 0;
000010  601a              STR      r2,[r3,#0]
                  |L2.18|
;;;49     
;;;50         temp = temp >> 1;
000012  0840              LSRS     r0,r0,#1
;;;51     
;;;52         if((temp & 1) != 1)
;;;53             _LED2 = 1;
000014  4b16              LDR      r3,|L2.112|
000016  07c4              LSLS     r4,r0,#31             ;52
000018  d01c              BEQ      |L2.84|
;;;54         else
;;;55             _LED2 = 0;
00001a  601a              STR      r2,[r3,#0]
                  |L2.28|
;;;56     
;;;57         temp = temp >> 1;
00001c  0840              LSRS     r0,r0,#1
;;;58         if((temp & 1) != 1)
;;;59             _LED3 = 1;
00001e  4b15              LDR      r3,|L2.116|
000020  07c4              LSLS     r4,r0,#31             ;58
000022  d019              BEQ      |L2.88|
;;;60         else
;;;61             _LED3 = 0;
000024  601a              STR      r2,[r3,#0]
                  |L2.38|
;;;62     
;;;63         temp = temp >> 1;
000026  0840              LSRS     r0,r0,#1
;;;64         if((temp & 1) != 1)
;;;65             _LED4 = 1;
000028  4b13              LDR      r3,|L2.120|
00002a  07c4              LSLS     r4,r0,#31             ;64
00002c  d016              BEQ      |L2.92|
;;;66         else
;;;67             _LED4 = 0;
00002e  601a              STR      r2,[r3,#0]
                  |L2.48|
;;;68     
;;;69         temp = temp >> 1;
000030  0840              LSRS     r0,r0,#1
;;;70         if((temp & 1) != 1)
;;;71             _LED5 = 1;
000032  4b12              LDR      r3,|L2.124|
000034  07c4              LSLS     r4,r0,#31             ;70
000036  d013              BEQ      |L2.96|
;;;72         else
;;;73             _LED5 = 0;
000038  601a              STR      r2,[r3,#0]
                  |L2.58|
;;;74     
;;;75         temp = temp >> 1;
00003a  0840              LSRS     r0,r0,#1
;;;76         if((temp & 1) != 1)
;;;77             _LED6 = 1;
00003c  4b10              LDR      r3,|L2.128|
00003e  07c4              LSLS     r4,r0,#31             ;76
000040  d010              BEQ      |L2.100|
;;;78         else
;;;79             _LED6 = 0;
000042  601a              STR      r2,[r3,#0]
                  |L2.68|
;;;80     
;;;81         temp = temp >> 1;
000044  0840              LSRS     r0,r0,#1
;;;82         if((temp & 1) != 1)
000046  07c3              LSLS     r3,r0,#31
;;;83             _LED7 = 1;
000048  480e              LDR      r0,|L2.132|
00004a  d00d              BEQ      |L2.104|
;;;84         else
;;;85             _LED7 = 0;
00004c  6002              STR      r2,[r0,#0]
;;;86     
;;;87     }
00004e  bd10              POP      {r4,pc}
                  |L2.80|
000050  6019              STR      r1,[r3,#0]            ;46
000052  e7de              B        |L2.18|
                  |L2.84|
000054  6019              STR      r1,[r3,#0]            ;53
000056  e7e1              B        |L2.28|
                  |L2.88|
000058  6019              STR      r1,[r3,#0]            ;59
00005a  e7e4              B        |L2.38|
                  |L2.92|
00005c  6019              STR      r1,[r3,#0]            ;65
00005e  e7e7              B        |L2.48|
                  |L2.96|
000060  6019              STR      r1,[r3,#0]            ;71
000062  e7ea              B        |L2.58|
                  |L2.100|
000064  6019              STR      r1,[r3,#0]            ;77
000066  e7ed              B        |L2.68|
                  |L2.104|
000068  6001              STR      r1,[r0,#0]            ;83
00006a  bd10              POP      {r4,pc}
                          ENDP

                  |L2.108|
                          DCD      0x40004848
                  |L2.112|
                          DCD      0x4000484c
                  |L2.116|
                          DCD      0x4000488c
                  |L2.120|
                          DCD      0x40004888
                  |L2.124|
                          DCD      0x40004824
                  |L2.128|
                          DCD      0x40004844
                  |L2.132|
                          DCD      0x4000489c

                          AREA ||i.Write_LED_Bar||, CODE, READONLY, ALIGN=2

                  Write_LED_Bar PROC
;;;16     
;;;17     void Write_LED_Bar(uint32_t Number)
000000  b530              PUSH     {r4,r5,lr}
;;;18     {
000002  b087              SUB      sp,sp,#0x1c
000004  4604              MOV      r4,r0
;;;19         uint32_t i;
;;;20         volatile uint32_t *ptrLED[_LED_Bar_Count] = {&_LED1, &_LED2, &_LED3, &_LED4, &_LED5, &_LED6, &_LED7};
000006  221c              MOVS     r2,#0x1c
000008  4909              LDR      r1,|L3.48|
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       __aeabi_memcpy4
;;;21     
;;;22         for(i = 0; i < _LED_Bar_Count; i++)
000010  2100              MOVS     r1,#0
000012  4608              MOV      r0,r1
000014  466a              MOV      r2,sp                 ;20
;;;23         {
;;;24             if((Number > i) & 0x01)
;;;25                 *ptrLED[i] = 0; //LED ON
;;;26             else
;;;27                 *ptrLED[i] = 1; //LED OFF
000016  2301              MOVS     r3,#1
                  |L3.24|
000018  f8525021          LDR      r5,[r2,r1,LSL #2]
00001c  428c              CMP      r4,r1                 ;24
00001e  d901              BLS      |L3.36|
000020  6028              STR      r0,[r5,#0]            ;25
000022  e000              B        |L3.38|
                  |L3.36|
000024  602b              STR      r3,[r5,#0]
                  |L3.38|
000026  1c49              ADDS     r1,r1,#1
000028  2907              CMP      r1,#7                 ;22
00002a  d3f5              BCC      |L3.24|
;;;28         }
;;;29     }
00002c  b007              ADD      sp,sp,#0x1c
00002e  bd30              POP      {r4,r5,pc}
;;;30     
                          ENDP

                  |L3.48|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x40004848
                          DCD      0x4000484c
                          DCD      0x4000488c
                          DCD      0x40004888
                          DCD      0x40004824
                          DCD      0x40004844
                          DCD      0x4000489c

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\NuEdu\\src\\NuEdu-Basic01_LED.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_NuEdu_Basic01_LED_c_aee5b6e9____REV16|
#line 114 "..\\..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___19_NuEdu_Basic01_LED_c_aee5b6e9____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_NuEdu_Basic01_LED_c_aee5b6e9____REVSH|
#line 128
|__asm___19_NuEdu_Basic01_LED_c_aee5b6e9____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
